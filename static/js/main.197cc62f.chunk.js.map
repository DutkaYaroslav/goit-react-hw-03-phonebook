{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","onSubmit","preventDefault","props","onAddTask","this","type","onChange","Component","contacts","onVisible","onRemove","map","visibleTask","key","id","onClick","App","filter","addTask","nameResult","numberResult","info","uuidv4","find","contact","toLowerCase","includes","alert","prevState","removeTask","taskId","persistedTasks","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleTasks","getVisibleTasks","ReactDOM","render","document","getElementById"],"mappings":"iRAEqBA,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBJ,EADU,EACVA,KAAMK,EADI,EACJA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,SAAW,SAAAJ,GACTA,EAAEK,iBAEF,EAAKC,MAAMC,UAAU,EAAKX,MAAMC,KAAM,EAAKD,MAAME,QAEjD,EAAKK,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,uDAIlC,OACE,6BACE,0BAAMM,SAAUI,KAAKJ,UACnB,sCAEE,6BACA,2BACEK,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKT,aACfF,KAAK,UAGT,6BACA,wCAEE,6BACA,2BACEa,SAAUF,KAAKT,aACfG,MAAOM,KAAKZ,MAAME,OAClBD,KAAK,YAGT,6BACA,4BAAQY,KAAK,UAAb,eACA,mC,GA/C+BE,aCiB1BC,EAjBE,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAUG,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,SAAxB,OACf,6BACE,uDAEE,2BAAOJ,SAAUA,EAAUb,KAAK,YAElC,4BACGgB,EAAUE,KAAI,SAAAC,GAAW,OACxB,wBAAIC,IAAKD,EAAYE,IAClBF,EAAYnB,KADf,IACsBmB,EAAYlB,OAChC,4BAAQqB,QAAS,kBAAML,EAASE,EAAYE,MAA5C,iBCPWE,E,4MACnBxB,MAAQ,CACNgB,SAAU,GACVS,OAAQ,I,EAoBVtB,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBJ,EADU,EACVA,KAAMK,EADI,EACJA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAYZoB,QAAU,SAACC,EAAYC,GAAkB,IAC/BZ,EAAa,EAAKhB,MAAlBgB,SACFa,EAAO,CACXP,GAAIQ,eACJ7B,KAAM0B,EACNzB,OAAQ0B,GAIRZ,EAASe,MAAK,SAAAC,GAAO,OACnBA,EAAQ/B,KAAKgC,cAAcC,SAASP,EAAWM,kBAGjDE,MAAM,+CAEN,EAAK5B,UAAS,SAAA6B,GACZ,MAAO,CACLpB,SAAS,GAAD,mBAAMoB,EAAUpB,UAAhB,CAA0Ba,S,EAM1CQ,WAAa,SAAAC,GACX,EAAK/B,UAAS,SAAA6B,GACZ,MAAO,CACLpB,SAAUoB,EAAUpB,SAASS,QAAO,SAAAO,GAAO,OAAIA,EAAQV,KAAOgB,U,kEAvDlE,IAAMC,EAAiBC,aAAaC,QAAQ,YACxCF,GACF3B,KAAKL,SAAS,CACZS,SAAU0B,KAAKC,MAAMJ,O,yCAKRK,EAAWR,GACxBA,EAAUpB,WAAaJ,KAAKZ,MAAMgB,UACpCwB,aAAaK,QAAQ,WAAYH,KAAKI,UAAUlC,KAAKZ,MAAMgB,a,wCAW5C,IAAD,EACaJ,KAAKZ,MAA1BgB,EADQ,EACRA,SAAUS,EADF,EACEA,OAElB,OAAOT,EAASS,QAAO,SAAAO,GAAO,OAC5BA,EAAQ/B,KAAKgC,cAAcC,SAAST,EAAOQ,oB,+BAqC7C,IAAMc,EAAenC,KAAKoC,kBAE1B,OACE,6BACE,yCACA,kBAAC,EAAD,CAAarC,UAAWC,KAAKc,UAE7B,wCACA,kBAAC,EAAD,CACEZ,SAAUF,KAAKT,aACfc,UAAW8B,EACX7B,SAAUN,KAAKyB,kB,GAlFQtB,aCDjCkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.197cc62f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddTask(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <label>\r\n            Name\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            ></input>\r\n          </label>\r\n          <br></br>\r\n          <label>\r\n            Number\r\n            <br></br>\r\n            <input\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n              name=\"number\"\r\n            ></input>\r\n          </label>\r\n          <br></br>\r\n          <button type=\"submit\">Add contact</button>\r\n          <br></br>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst contacts = ({ onChange, onVisible, onRemove }) => (\r\n  <div>\r\n    <label>\r\n      find contacts by name\r\n      <input onChange={onChange} name=\"filter\"></input>\r\n    </label>\r\n    <ul>\r\n      {onVisible.map(visibleTask => (\r\n        <li key={visibleTask.id}>\r\n          {visibleTask.name}:{visibleTask.number}\r\n          <button onClick={() => onRemove(visibleTask.id)}>delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default contacts;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactList/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    // name: \"\",\n    // number: \"\",\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem('contacts');\n    if (persistedTasks) {\n      this.setState({\n        contacts: JSON.parse(persistedTasks),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  getVisibleTasks() {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n  addTask = (nameResult, numberResult) => {\n    const { contacts } = this.state;\n    const info = {\n      id: uuidv4(),\n      name: nameResult,\n      number: numberResult,\n    };\n\n    if (\n      contacts.find(contact =>\n        contact.name.toLowerCase().includes(nameResult.toLowerCase()),\n      )\n    ) {\n      alert('this user name already in your contact list');\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, info],\n        };\n      });\n    }\n  };\n\n  removeTask = taskId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== taskId),\n      };\n    });\n  };\n\n  render() {\n    // const { contacts } = this.state;\n    const visibleTasks = this.getVisibleTasks();\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm onAddTask={this.addTask} />\n\n        <h2>Contacts</h2>\n        <ContactsList\n          onChange={this.handleChange}\n          onVisible={visibleTasks}\n          onRemove={this.removeTask}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}